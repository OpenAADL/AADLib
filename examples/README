README for AADLib examples
==========================

These examples illustrate some use of the AADLib AADL component
libraries, adapted from existing AADL models (either v1 or v2) to
AADLv2, and the AADLib AADL components library.

For each example:

 - "make help" return the list of available targets for this example,
   from the following list:

 - "make parse-aadl"    : compile the example using Ocarina
 - "make c"             : generate architecture C code derived from the AADL
                          model, using the Ocarina/C code generator
 - "make build_c"       : generate and compile C code
 - "make ada"           : generate architecture Ada code
 - "make build_ada"     : generate and compile C code
 - "make real"          : check REAL theorems applicable to this model
 - "make cheddar"       : check scheduling of the corresponding model
 - "make arinc653_conf" : generate ARINC653 XML descriptor from AADLv2 model
 - "make clean"         : remove generated files

Similarly, from OSATE2 workspace, you may right-click on the root
system, and trigger the equivalent mapping.

In addition, the following target is always available:

 - "make check"      : run all available targets, for regression testing

Here is a short description of available examples

* adiru: model of an ADIRU subsystem, contributed by GONG Huawei (MS
  EMS student at ISAE in 2013-2014).

* aocs: model of an Attitude Orbital Control System, derived from
  design document from
  http://control.ee.ethz.ch/~ceg/AocsFramework/index.html

* ardupilot: models the ardupilot UAV platform, adapted from the POK
  project (see http://pok.safety-critical.eu)

* arinc653_annex: models from the ARINC653 annex document for AADLv2

* asl: work in progress REAL theorems in preparation for the ASL annex
  as part of SAE AS2/C committee work

* car: case study from the chapter written by Emmanuel Grolleau,
  Pascal Richard and MichaÃ«l Richard, Scheduling in Distributed
  Real-Time Systems, Distributed Systems: Design and Algorithms,
  chapt. 7, Serge Haddad, Fabrice Kordon, Laurent Pautet, Laure
  Petrucci, ISTE, Wiley, 2011

* data_modeling_annex: models from the Data Modeling annex document
  for AADLv2

* fcs: models a naive Flight Control Systems, adapted from a lab on
  scheduling analysis tools developed by C. Pagetti from ONERA; and
  adapted for AADL teaching classes by J. Hugues at ISAE.  Only the
  architecture is developed, to be analyzed with Cheddar.

* fms: models a Flignt Management System, demonstrates coupling
  between ARINC653 annex and capability to models AFDX. Example
  contributed by G. Brau (PhD Student Univ. Luxembourg).

* isr: models an Interrupt Service Routine

* line_follower: a line follower robot for the Arduino platform, using
 some parts available from SparkFun Electronics.

* memory: this examples demonstrates how to define logical and
  hardware memory layout, and how to ensure they match. This example
  was build in collaboration between F. Singhoff and S. Rubini (UBO)
  and J. Hugues (ISAE)

* mixin: this example demonstrates how to support multiple inheritance
  in AADLv2, using the mixin pattern defined in many object-oriented
  languages like Ada.

* multicore: provides one solution for modeling multicore systems in
  AADLv2, and performing code generation using Ocarina.

* pathfinder_system: models the well known pathfinder probe, and
  illustrates its priority inversion problem using Cheddar.

* radar: a naive model of a radar system, made in collaboration with
  F. Singhoff from UBO, P. Disseaux from Ellidiss and Nader Khammassi
  from Virtualys and J. Hugues (ISAE). Adapted to AADLv2

* rap: Ravenscar Avionics Platform, adapted from Irfan Hamid and
  Bechir Zalila code by Olivier Gilles during his PhD to demonstrate
  optimization of AADL model. This models builds upon the Generic
  Avionics Platform from SEI.

* rap_code: Ravenscar Avionics Platform, by Irfan Hamid and Bechir
  Zalila, and updated to AADLv2. This models builds upon the "Generic
  Avionic Platform", by C. Douglass Locke, David R. Vogel, Lee Lucas ,
  John B. Goodenough as presented in the CMU/SEI Technical Report
  CMU/SEI-90-TR-8.

* ravenscar: case study issued from the ``Guide for the use of the Ada
  Ravenscar Profile in high integrity systems'' written by Alan Burns,
  Brian Dobbing and Tullio Vardanega; adapted to AADLv1 by Bechir
  Zalila duing his PhD. This models has been translated to AADLv2, and
  extended to include REAL theorems to check Ravenscar patterns.

* rma: two tasks with different period on the same node, can be
  checked by Cheddar, or can generate code for either PolyORB-HI/C or
  Ada.

* rosace: models the case study from "Pagetti, Claire and Saussie,
  David and Gratia, Romain and Noulard, Eric and Siron, Pierre "The
  ROSACE Case Study: From Simulink Specification to Multi/Many-Core
  Execution." (2014) published in RTAS'2014

* time_triggered: shows how to implement a time-triggered architecture
  using delayed connections.

* uxv: models a series of UAV and UGV from ISAE DMIA lab. Initial
  models were build by Cedric Chedaleux, Fabrice Cotdeloup and Sladana
  Yousri-Stojkovic while students at ISAE.
