package devices::receiver_smc16
public

with types;
with buses;
with Electricity_Properties;

-----------------
--   DEVICE   --
-----------------
device RECEIVER   
 features
  Serial_Wire :    requires bus access buses::TIMER_bus.impl;
  Supply    :    requires bus access buses::V5_Bus.impl;     
   proc_evt : in event port;
end  RECEIVER;

device implementation RECEIVER.impl
properties
  Initialize_Entrypoint => classifier (devices::receiver_smc16::Initialize);
  Electricity_Properties::Idle_Current => 1.0 mA; -- no data estimated value
  Electricity_Properties::Run_Current =>  26.0 mA; 
  Electricity_Properties::Peak_Current => 100.0 mA; -- to measure
  Electricity_Properties::Core_Voltage => 5.0 V;  
  Electricity_Properties::Acquisition_Time => 2 ms; -- no data
  Electricity_Properties::Peak_Time => 1 ms;
  Electricity_Properties::VIH_min => 3.1 V; 
  Electricity_Properties::VIL_max => 1.5 V; 
  Electricity_Properties::VOH_min => 4.7 V; 
  Electricity_Properties::VOL_max => 0.4 V;  
  -- level shifter added to connect to PWM interface
  Electricity_Properties::Level_Shifter_VIH_min => 2.0 V ;  
  Electricity_Properties::Level_Shifter_VIL_max => 1.0 V;  
  Electricity_Properties::Level_Shifter_VOH_min => 3.2 V;  
  Electricity_Properties::Level_Shifter_VOL_max => 0.4 V ;  
  Electricity_Properties::Device_Type => Slave;    
end RECEIVER.impl;
  
-----------------------------------
--  RECEIVER DRIVER FOR Timer1 INTERFACE --
-----------------------------------

abstract RECEIVER_Driver
end RECEIVER_Driver;
abstract implementation RECEIVER_Driver.impl
end RECEIVER_Driver.impl;



-----------------
-- SUBPROGRAMS --
----------------- 
-- These subprograms model the high-level view of the serial line
-- protocol stack. They define an API used by the stack to send and
-- receive data, and perform node's initialisation.

subprogram Initialize
properties
  Source_Name => "initialize";
  Source_Text => ("receiver_smc16.c");
  Source_Language => (C);
end Initialize;
subprogram Receive
end Receive;

subprogram Read_Mode
features
  RECEIVER_channel    : in parameter types::TIMER_channel; 
  RECEIVER_mode       : out parameter types::RECEIVER_cmd_dat;  
properties
  Source_Name => "read_mode";
  Source_Text => ("receiver_smc16.c");
  Source_Language => (C);
end Read_Mode;

subprogram Read_cmd
features
  RECEIVER_channel    : in parameter types::TIMER_channel; 
  RECEIVER_cmd        : out parameter types::RECEIVER_cmd_dat;  
properties
  Source_Name => "read_cmd";
  Source_Text => ("receiver_smc16.c");
  Source_Language => (C);
end Read_cmd;
  
  
end devices::receiver_smc16;
 
